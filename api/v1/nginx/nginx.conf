# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user  nginx;
worker_processes  1;
error_log  /dev/stdout warn;
pid        /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    proxy_cache_path  /etc/nginx/cache  levels=1:2    keys_zone=STATIC:10m
    inactive=24h  max_size=1g;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Development Only
    # access_log  /dev/stdout  main;
    # Production
    access_log off;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    types_hash_max_size 2048;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    client_max_body_size 1k;
    large_client_header_buffers 4 8k;

    server_tokens off;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # Catch All
    server {
        listen       80 default_server;
        listen       [::]:80 default_server;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        if ($request_method !~ ^(GET|HEAD)$ )
        {
            return 444;
        }
        add_header X-Frame-Options "DENY";

        location = /health {
             return 200;
        }

        # location = /status {
        #    stub_status;
        # }



        if ($request_method !~ ^(GET|HEAD)$ )
        {
            return 444;
        }
        
        add_header X-Frame-Options "DENY";
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        location ~ ^/$ {
            return 302 /swagger;
        }

        location / {
            root  /usr/share/nginx/html;
            try_files $uri $uri.json $uri/ =404;
        }

        location /swagger {
            alias /usr/share/nginx/html/swagger;
            try_files $uri $uri/ index.html;
        }

        
        
    }

    server {
        listen 443 ssl;

        ssl_certificate /etc/letsencrypt/live/v1.covquestions.aquiver.de/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/v1.covquestions.aquiver.de/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        
        location / {
            proxy_pass http://127.0.0.1:80;
        }

    }
}