openapi: 3.0.0
info:
  title: CovApp
  version: '1.0'
  description: API for standarized Questionaires Development and Analysis
  license:
    name: Apache License 2.0
    url: 'https://github.com/alexanderthieme/CovQuestions/blob/master/LICENSE'
  contact:
    name: 'CovQuestions-Team '
    url: 'https://github.com/alexanderthieme/CovQuestions/'
servers:
  - url: 'http://localhost:3000'
    description: Development
paths:
  /questionnaire:
    get:
      summary: Questionnaire - List All
      tags:
        - questionnaire
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Questionnaire'
      operationId: get-questionnaire
      description: Lists all questionaires
  '/questionnaire/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Questionnaire - Get One
      tags:
        - questionnaire
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
      operationId: get-questionnaire-id
      description: 'Returns a whole questionaire containing the questions in the order they are displayed and the logic for leaps inbetween. '
  '/views/full-questionnaire/{id}/{version}/{lang}':
    get:
      summary: Views - Questionnaire
      tags:
        - views
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View_Questionnaire'
      operationId: get-views-full-questionnaire
      description: Get a whole Questionnaire with expanded Questions and in the right language.
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: version
        in: path
        required: true
      - schema:
          type: string
        name: lang
        in: path
        required: true
  '/questions/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Questions - Get One
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Question'
      operationId: get-questions-id
      description: Returns the question with the given ID
      tags:
        - questions
  /questions:
    get:
      summary: Questions - List All
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
      operationId: get-questions
      description: 'Returns all single questions '
      tags:
        - questions
components:
  schemas:
    Question:
      title: Question
      type: object
      x-tags:
        - models
      properties:
        id:
          $ref: '#/components/schemas/API_GUID'
        category:
          type: string
        comment:
          type: string
        text:
          $ref: '#/components/schemas/TranslationKey'
        inputType:
          $ref: '#/components/schemas/InputType'
        type:
          $ref: '#/components/schemas/QuestionType'
        choices:
          type: array
          items:
            $ref: '#/components/schemas/Q_Choice'
      required:
        - id
    QuestionType:
      type: string
      title: QuestionType
      enum:
        - checkbox
        - radio
        - text
      example: text
      x-examples:
        example-1: text
      x-tags:
        - models
    InputType:
      type: string
      title: InputType
      enum:
        - date
        - text
      example: date
      x-tags:
        - models
    TranslationKey:
      title: TranslationKey
      type: string
      description: A Translation Key that can be used to request the corresponding translation
      x-examples:
        example-1: application_title
      x-tags:
        - models
    API_GUID:
      title: GUID
      type: string
      description: Unique Identifier of the resource
      x-tags:
        - models
    Q_Choice:
      title: Q_Choice
      type: object
      properties:
        value:
          type: string
          description: The Weight for Scoring Algorithm
        text:
          $ref: '#/components/schemas/TranslationKey'
      x-tags:
        - models
    ENUM_Language:
      type: string
      title: ENUM_Language
      enum:
        - none
        - de
        - en
        - pl
      x-tags:
        - models
    Questionnaire:
      title: Questionnaire
      type: object
      description: A Questionnaire object
      x-tags:
        - models
      properties:
        questions:
          type: string
        '':
          type: string
    View_Questionnaire:
      title: View_Questionnaire
      type: object
      description: The Questionnaire expanded to load all required data in one request
      x-tags:
        - models
      properties:
        id:
          type: string
        pages:
          type: array
          items:
            $ref: '#/components/schemas/Questionnaire_Page'
        triggers:
          $ref: '#/components/schemas/Questionnaire_Triggers'
    API_Reference:
      title: API_Reference
      type: object
      properties:
        id:
          $ref: '#/components/schemas/API_GUID'
        $ref:
          type: string
          description: URL to the resource
      description: A General Model for References to other Resources
      x-tags:
        - models
tags:
  - name: models
    description: Everything about the models used in this API
  - name: answers
    description: The Answers Endpoint
  - name: questions
    description: The Questions Endpoint
  - name: questionnaire
    description: The Questionnaire Endpoint
  - name: views
    description: 'The Views Endpoint, supplying custom views for easier data retrieval'
